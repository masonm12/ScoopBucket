{
    "homepage": "http://dlang.org/",
    "version": "2.065.0",
    "license": "Boostv1.0, https://raw.githubusercontent.com/D-Programming-Language/dmd/master/src/backendlicense.txt",
    "url": "http://downloads.dlang.org/releases/2014/dmd.2.065.0.zip",
    "hash": "sha1:cff1d0978736b2c83c63450fbc0a0692c7ecba68",
    "extract_dir": "dmd2",
    "bin": ["windows/bin/dmd.exe", "windows/bin/rdmd.exe"],
    "checkver": "D ([0-9.]+)</a>",
    "post_install": "
        $vsPrefixMap = @{
            '12.0' = ';VC2013 ';
            '11.0' = ';VC2012 ';
            '10.0' = ';VC2010 ';
            '9.0'  = ';VC2008 ';
        }
        $wdkRegKeyMap = @{
            '8.1' = @('Microsoft/Windows Kits/Installed Roots', 'KitsRoot81');
            '8.0' = @('Microsoft/Windows Kits/Installed Roots', 'KitsRoot');
            '7.11' = @('Microsoft/Microsoft SDKs/Windows/v7.1a', 'InstallationFolder');
            '7.01' = @('Microsoft/Microsoft SDKs/Windows/v7.0a', 'InstallationFolder');
            '6.01' = @('Microsoft/Microsoft SDKs/Windows/v6.0a', 'InstallationFolder');
        }

        function getSoftwareRegRoot() {
            $regRoot = 'HKLM:/SOFTWARE/Wow6432Node'
            # if an pointer is 4 bytes, then we're 32-bit!
            if ([IntPtr]::size -eq 4) {
                $regRoot = 'HKLM:/SOFTWARE'
            }

            $regRoot
        }
        function getVSPath($version) {
            $root = getSoftwareRegRoot
            $vcPath = Join-Path $root \"Microsoft/VisualStudio/$version/Setup/VC\"
            if (Test-Path $vcPath) {
                $(Get-ItemProperty $vcPath).ProductDir
            }
        }
        function getWDKPath($version) {
            $regRoot = getSoftwareRegRoot
            $wdkRegInfo = $wdkRegKeyMap[$version]
            $wdkPath = Join-Path $regRoot $wdkRegInfo[0]
            if (Test-Path $wdkPath) {
                $(Get-ItemProperty $wdkPath).$($wdkRegInfo[1])
            }
        }
        function replaceLine($filename, $oldLine, $newLine) {
            $content = gc $filename | % {$_.replace($oldLine, $newLine)}
            $content | sc $filename
        }
        function removeTrailingBackslash($path) {
            if ($path[-1] -eq '\\') { $path.substring(0, $path.length - 1) }
            else { $path }
        }

        $vspath, $vsprefix = $vsPrefixMap.keys | % {$out = @{}} {$out[$_] = getVSPath $_} {$out.getenumerator()} |
            ? {$_.value} | sort @{e={$_.key -as [float]}; descending=$true} | select -first 1 | % {$_.value, $vsPrefixMap[$_.key]}
        $wdkPath = $wdkRegKeyMap.GetEnumerator() | % {$_.Key} | sort -descending | % {getWDKPath $_} | select -first 1
        $vspath = removeTrailingBackslash $vspath
        $wdkpath = removeTrailingBackslash $wdkpath
        $inifile = \"$dir/windows/bin/sc.ini\"
        if (!$vspath) {
            'Could not detect Visual Studio (2008-2013 are supported). Using defaults.'
        }
        else {
            replaceLine $inifile $vsprefix ''
            replaceLine $inifile ';VCINSTALLDIR=' \"VCINSTALLDIR=$vspath\"
        }
        if (!$wdkpath) {
            'Could not detect Windows SDK (6.0A-8.1A are supported). Using defaults.'
        }
        else {
            replaceLine $inifile ';WindowsSdkDir=' \"WindowsSdkDir=$wdkpath\"
        }
    "
}
